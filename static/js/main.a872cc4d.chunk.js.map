{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h4/HW4.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","s","message__wrapper","message__avatar","src","avatar","alt","message__body","message__name","name","message__text","message","message__time","time","messageData","HW1","Affair","priority","affair","item","button","onClick","deleteAffairCallback","_id","SuperButton","red","restProps","finalClassName","Affairs","mappedAffairs","data","map","a","wrapper","list","style","display","justifyContent","alignItems","filterButton","setFilter","yellow","green","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","errorText","spanClassName","finalSpanClassName","finalInputClassName","superInput","errorInput","e","currentTarget","value","key","Greeting","setNameCallback","addUser","totalUsers","users","position","input","disabled","buttonBorder","usersList","usersTitle","u","index","usersItem","GreetingContainer","addUserCallback","setName","setError","length","alert","trim","HW3","setUsers","v1","SuperCheckbox","onChangeChecked","children","checkbox","container","checked","checkmark","HW4","text","setText","showAlert","setChecked","column","blue","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"iFACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,UAAY,2BAA2B,YAAc,6BAA6B,SAAW,0BAA0B,KAAO,sBAAsB,KAAO,sBAAsB,OAAS,wBAAwB,aAAe,8BAA8B,IAAM,qBAAqB,OAAS,wBAAwB,MAAQ,yB,iBCAxXD,EAAOC,QAAU,CAAC,iBAAmB,kCAAkC,gBAAkB,iCAAiC,cAAgB,+BAA+B,cAAgB,+BAA+B,cAAgB,+BAA+B,cAAgB,iC,gBCAvRD,EAAOC,QAAU,CAAC,QAAU,0BAA0B,aAAe,+BAA+B,MAAQ,wBAAwB,WAAa,6BAA6B,UAAY,4BAA4B,UAAY,8B,oBCAlOD,EAAOC,QAAU,CAAC,OAAS,4BAA4B,IAAM,2B,gBCA7DD,EAAOC,QAAU,CAAC,WAAa,mCAAmC,WAAa,mCAAmC,MAAQ,gC,gBCA1HD,EAAOC,QAAU,CAAC,UAAY,iCAAiC,UAAY,mC,iBCA3ED,EAAOC,QAAU,CAAC,KAAO,kBAAkB,OAAS,oBAAoB,cAAgB,6B,iBCAxFD,EAAOC,QAAU,CAAC,IAAM,mB,iJCiCTC,MAvBf,SAAiBC,GAChB,OACC,sBAAKC,UAAWC,IAAEC,iBAAlB,UACC,qBAAKF,UAAWC,IAAEE,gBAAlB,SACC,qBAAKC,IAAKL,EAAMM,OAAQL,UAAW,sBAAuBM,IAAK,aAEhE,sBAAKN,UAAWC,IAAEM,cAAlB,UACC,mBAAGP,UAAWC,IAAEO,cAAhB,SACET,EAAMU,OAER,mBAAGT,UAAWC,IAAES,cAAhB,SACEX,EAAMY,UAER,qBAAKX,UAAWC,IAAEW,cAAlB,SACC,+BACEb,EAAMc,gBCvBPC,EACM,qFADNA,EAEI,YAFJA,EAGO,YAHPA,EAII,QA4BKC,MAzBf,WACI,OACI,gCACI,uBADJ,cAQI,cAAC,EAAD,CACIV,OAAQS,EACRL,KAAMK,EACNH,QAASG,EACTD,KAAMC,IAGV,uBAGA,2B,uBCFGE,MAhBf,SAAgBjB,GACf,IAIMkB,EAAWlB,EAAMmB,OAAOD,SAE9B,OACC,qBAAIjB,UAAWC,IAAEkB,KAAjB,UACC,4BAAIpB,EAAMmB,OAAOT,OAAS,mBAAGT,UAAWC,IAAE,GAAD,OAAIgB,EAAJ,UAAf,SAAuClB,EAAMmB,OAAOD,WAC9E,wBAAQjB,UAAWC,IAAEmB,OAAQC,QATR,WACtBtB,EAAMuB,qBAAqBvB,EAAMmB,OAAOK,MAQvC,sB,+BCIYC,EAhBqC,SAAC,GAK/C,IAHEC,EAGH,EAHGA,IAAKzB,EAGR,EAHQA,UACF0B,EAEN,mCACKC,EAAc,UAAMF,EAAG,UAAMxB,IAAEmB,OAAR,YAAkBnB,IAAEwB,KAAQxB,IAAEmB,OAAvC,YAAiDpB,GAAwB,GAAzE,MAEpB,OACI,oCACIA,UAAW2B,GACPD,KCyBDE,MAlCf,SAAiB7B,GACb,IAAM8B,EAAgB9B,EAAM+B,KAAKC,KAAI,SAACC,GAAD,OACjC,cAAC,EAAD,CAEId,OAAQc,EACRV,qBAAsBvB,EAAMuB,sBAFvBU,EAAET,QAWf,OACI,sBAAKvB,UAAWC,IAAEgC,QAAlB,UAGI,qBAAIjC,UAAWC,IAAEiC,KAAjB,UACI,qBAAIlC,UAAWC,IAAEkB,KAAjB,UAAuB,iFAAe,0FACrCU,KAGL,sBAAKM,MAAO,CAACC,QAAS,OAAQC,eAAgB,SAAUC,WAAY,UAApE,UACI,cAAC,EAAD,CAAatC,UAAWC,IAAEsC,aAAclB,QAfrC,WAAOtB,EAAMyC,UAAU,QAe1B,iBACA,cAAC,EAAD,CAAaxC,UAAS,UAAKC,IAAEsC,aAAP,YAAuBtC,IAAEwB,KAAOJ,QAflD,WAAOtB,EAAMyC,UAAU,SAe3B,kBACA,cAAC,EAAD,CAAaxC,UAAS,UAAKC,IAAEsC,aAAP,YAAuBtC,IAAEwC,QAAUpB,QAfnD,WAAOtB,EAAMyC,UAAU,WAe7B,oBACA,cAAC,EAAD,CAAaxC,UAAS,UAAKC,IAAEsC,aAAP,YAAuBtC,IAAEyC,OAASrB,QAfrD,WAAOtB,EAAMyC,UAAU,QAe1B,wBCxBVG,EAAoC,CACtC,CAACpB,IAAK,EAAGd,KAAM,QAASQ,SAAU,QAClC,CAACM,IAAK,EAAGd,KAAM,QAASQ,SAAU,OAClC,CAACM,IAAK,EAAGd,KAAM,QAASQ,SAAU,OAClC,CAACM,IAAK,EAAGd,KAAM,OAAQQ,SAAU,QACjC,CAACM,IAAK,EAAGd,KAAM,aAAcQ,SAAU,WAyC5B2B,MA3Bf,WAAgB,IAAD,EACmBC,mBAA4BF,GAD/C,mBACJG,EADI,KACKC,EADL,OAEiBF,mBAAqB,OAFtC,mBAEJG,EAFI,KAEIR,EAFJ,KAILS,EAdmB,SAACH,EAA4BE,GACtD,MAAe,QAAXA,EAAyBF,EAElBA,EAAQE,QAAO,SAAC7B,GAAD,OAAsBA,EAAKF,WAAa+B,KAW1CE,CAAcJ,EAASE,GAG/C,OACI,gCACI,uBADJ,cAKI,cAAC,EAAD,CACIlB,KAAMmB,EACNT,UAAWA,EACXlB,qBAXiB,SAACC,GAAD,OAAiBwB,EATtB,SAACD,EAA4BvB,GACrD,OAAOuB,EAAQE,QAAO,SAAChB,GAAD,OAAkBA,EAAET,MAAQA,KAQO4B,CAAaL,EAASvB,OAcvE,uBAGA,2B,iDCIG6B,EA5C2C,SAAC,GAWtD,EATGC,KASF,IAREC,EAQH,EARGA,SAAUC,EAQb,EARaA,aACVC,EAOH,EAPGA,WAAYC,EAOf,EAPeA,QACZC,EAMH,EANGA,MACAC,EAKH,EALGA,UACA3D,EAIH,EAJGA,UAAW4D,EAId,EAJcA,cAERlC,EAEN,yHAeKmC,EAAkB,UAAM5D,IAAEyD,MAAR,YAAiBE,GAAgC,IACnEE,EAAmB,UAAM7D,IAAE8D,WAAR,YAAsBL,EAAQzD,IAAE+D,WAAa,GAA7C,YAAmDhE,GAE5E,OACI,qCACI,mCACIqD,KAAM,OACNC,SArBa,SAACW,GACtBX,GACGA,EAASW,GAEZV,GAAgBA,EAAaU,EAAEC,cAAcC,QAkBrCX,WAhBe,SAACS,GACxBT,GAAcA,EAAWS,GAEzBR,GACa,UAAVQ,EAAEG,KACFX,KAYKzD,UAAW8D,GAEPpC,IAEPgC,GAAS,sBAAM1D,UAAW6D,EAAjB,SAAsCF,GAAwB,iBCNrEU,EA9B+B,SAAC,GAEzC,IADJ5D,EACG,EADHA,KAAM6D,EACH,EADGA,gBAAiBC,EACpB,EADoBA,QAASb,EAC7B,EAD6BA,MAAOc,EACpC,EADoCA,WAAYC,EAChD,EADgDA,MAAOd,EACvD,EADuDA,UAI3D,OACC,sBAAK3D,UAAWC,IAAEgC,QAAlB,UACC,sBAAKE,MAAO,CAACC,QAAS,OAAQE,WAAY,SAAUoC,SAAU,YAA9D,UACE,cAAC,EAAD,CAAgBP,MAAO1D,EACnB8C,aAAce,EAAiBb,QAASc,EACxCb,MAAOA,EACPC,UAAWA,EACX3D,UAAWC,IAAE0E,QAElB,cAAC,EAAD,CAAaC,SAAUlB,EAAOrC,QAASkD,EAASvE,UAAWC,IAAE4E,aAA7D,oBAGD,sBAAK7E,UAAWC,IAAE6E,UAAlB,UACC,qBAAI9E,UAAWC,IAAE8E,WAAjB,kIAAoDP,KACnDC,EAAM1C,KAAI,SAACiD,EAAaC,GAAd,OACV,sBAAKjF,UAAWC,IAAEiF,UAAlB,UACC,gDAAYD,EAAQ,KACpB,+BAAOD,EAAEvE,SAFwBuE,EAAEzD,eCa1B4D,EAtCiD,SAAC,GAA8B,IAA7BV,EAA4B,EAA5BA,MAAOW,EAAqB,EAArBA,gBAAqB,EACrEvC,mBAAiB,IADoD,mBACtFpC,EADsF,KAChF4E,EADgF,OAEnExC,oBAAkB,GAFiD,mBAEtFa,EAFsF,KAE/E4B,EAF+E,KAuBvFd,EAAaC,EAAMc,OAEzB,OACC,cAAC,EAAD,CACC9E,KAAMA,EACN6D,gBAxBsB,SAACH,GACpBA,GAAsB,MAAbA,EAAM,IAClBmB,GAAS,GACTD,EAAQlB,KAERmB,GAAS,GACTD,EAAQ,MAmBRd,QAhBc,WACZ9D,IACF+E,MAAM,SAAD,OAAU/E,EAAKgF,OAAf,OACLL,EAAgB3E,EAAKgF,QACrBJ,EAAQ,MAaR3B,MAAOA,EACPC,UAAU,qIACVa,WAAYA,EACZC,MAAOA,KCbKiB,MAvBf,WAAgB,IAAD,EACY7C,mBAA0B,IADtC,mBACP4B,EADO,KACAkB,EADA,KAQd,OACC,gCACC,uBADD,cAKC,cAAC,EAAD,CAAmBlB,MAAOA,EAAOW,gBAXX,SAAC3E,GACvBkF,EAAS,GAAD,mBAAKlB,GAAL,CAAY,CAAClD,IAAKqE,cAAMnF,KAAMA,SAYtC,uBAGA,2B,kCCaYoF,EAhCyC,SAAC,GASpD,EAPGxC,KAOF,IANEC,EAMH,EANGA,SAAUwC,EAMb,EANaA,gBACV9F,EAKH,EALGA,UACA+F,GAIH,EALcnC,cAKd,EAJGmC,UAEGrE,EAEN,4FAMKoC,EAAmB,UAAM7D,IAAE+F,SAAR,YAAoBhG,GAAwB,IAErE,OACI,wBAAOA,UAAWC,IAAEgG,UAApB,UACI,mCACI5C,KAAM,WACNC,SAXa,SAACW,GACtBX,GAAYA,EAASW,GACrB6B,GAAmBA,EAAgB7B,EAAEC,cAAcgC,UAU3ClG,UAAW8D,GAEPpC,IAER,sBAAM1B,UAAWC,IAAEkG,YAClBJ,GAAY,+BAAQA,QCyClBK,MAzEf,WAAgB,IAAD,EACavD,mBAAiB,IAD9B,mBACJwD,EADI,KACEC,EADF,KAEL5C,EAAQ2C,EAAO,GAAK,QAEpBE,EAAY,WACV7C,EACA8B,MAAM,gFAENA,MAAMa,IARH,EAYmBxD,oBAAkB,GAZrC,mBAYJqD,EAZI,KAYKM,EAZL,KAeX,OACI,gCACI,uBADJ,cAII,sBAAKxG,UAAWC,IAAEwG,OAAlB,UACI,cAAC,EAAD,CACItC,MAAOkC,EACP9C,aAAc+C,EACd7C,QAAS8C,EACT5C,UAAWD,IAIf,cAAC,EAAD,CACI1D,UAAWC,IAAEyG,OAKjB,cAAC,EAAD,sBAIA,cAAC,EAAD,CACIjF,KAAG,EACHJ,QAASkF,EAFb,qBAOA,cAAC,EAAD,CAAa3B,UAAQ,EAArB,sBAMA,cAAC,EAAD,CACIsB,QAASA,EACTJ,gBAAiBU,EAFrB,wBAQA,cAAC,EAAD,CAAeN,QAASA,EAAS5C,SA/CxB,SAACW,GAAD,OAAsCuC,EAAWvC,EAAEC,cAAcgC,eAkD9E,uBAKA,2BCrDGS,MAdf,WACI,OACI,sBAAK3G,UAAWC,IAAE0G,IAAlB,UACI,mDACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCFQC,QACa,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACrB,2DCZRC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SDiIpB,kBAAmBC,WACnBA,UAAUC,cAAcC,MACnBC,MAAK,SAAAC,GACFA,EAAaC,gBAEhBC,OAAM,SAAAlE,GACHmE,QAAQnE,MAAMA,EAAM/C,c","file":"static/js/main.a872cc4d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Affairs_wrapper__2ZSaM\",\"highColor\":\"Affairs_highColor__dHXd0\",\"middleColor\":\"Affairs_middleColor__3gh_O\",\"lowColor\":\"Affairs_lowColor__1FDYV\",\"item\":\"Affairs_item__WjCCY\",\"list\":\"Affairs_list___75kj\",\"button\":\"Affairs_button__H8onB\",\"filterButton\":\"Affairs_filterButton__ZGgWy\",\"red\":\"Affairs_red__2CtZx\",\"yellow\":\"Affairs_yellow__2DVke\",\"green\":\"Affairs_green__3wuHE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message__wrapper\":\"Message_message__wrapper__27ME3\",\"message__avatar\":\"Message_message__avatar__1CC7e\",\"message__body\":\"Message_message__body__1wOQW\",\"message__name\":\"Message_message__name__23Tjg\",\"message__text\":\"Message_message__text__1zIvK\",\"message__time\":\"Message_message__time__2hdnL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Greeting_wrapper__11r1m\",\"buttonBorder\":\"Greeting_buttonBorder__2WLNl\",\"input\":\"Greeting_input__3_ju6\",\"usersTitle\":\"Greeting_usersTitle__1rXGg\",\"usersList\":\"Greeting_usersList__3KObn\",\"usersItem\":\"Greeting_usersItem__2p9jz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"SuperButton_button__GqLqu\",\"red\":\"SuperButton_red__3lWwg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2dHPK\",\"errorInput\":\"SuperInputText_errorInput__24n_g\",\"error\":\"SuperInputText_error__oCFDr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SuperCheckbox_container__1Wc0-\",\"checkmark\":\"SuperCheckbox_checkmark__16KML\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__3Ia1E\",\"column\":\"HW4_column__2yXkK\",\"testSpanError\":\"HW4_testSpanError__32zZQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__j3MTD\"};","import React from 'react'\r\nimport s from  \"./Message.module.css\"\r\n\r\n\r\ntype MessagePropsType = {\r\n\tavatar: string\r\n\tname: string\r\n\tmessage: string,\r\n\ttime: string,\r\n}\r\n\r\nfunction Message(props: MessagePropsType) {\r\n\treturn (\r\n\t\t<div className={s.message__wrapper}>\r\n\t\t\t<div className={s.message__avatar}>\r\n\t\t\t\t<img src={props.avatar} className={\"message-avatar__img\"} alt={\"AVATAR\"}/>\r\n\t\t\t</div>\r\n\t\t\t<div className={s.message__body}>\r\n\t\t\t\t<p className={s.message__name}>\r\n\t\t\t\t\t{props.name}\r\n\t\t\t\t</p>\r\n\t\t\t\t<p className={s.message__text}>\r\n\t\t\t\t\t{props.message}\r\n\t\t\t\t</p>\r\n\t\t\t\t<div className={s.message__time} >\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t\t{props.time}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from \"./Message\";\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Some Name',\r\n    message: 'some text',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport {AffairPriorityType, AffairType} from \"./HW2\";\r\n\r\nimport s from './Affairs.module.css'\r\n\r\ntype AffairPropsType = {\r\n\t// key не нужно типизировать\r\n\taffair: AffairType // need to fix any\r\n\tdeleteAffairCallback: (id: number) => void // need to fix any\r\n}\r\n\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n\tconst deleteCallback = () => {\r\n\t\tprops.deleteAffairCallback(props.affair._id)\r\n\t}// need to fix\r\n\r\n\tconst priority = props.affair.priority;\r\n\r\n\treturn (\r\n\t\t<li className={s.item}>\r\n\t\t\t<p>{props.affair.name}</p><p className={s[`${priority}Color`]} >{props.affair.priority}</p>\r\n\t\t\t<button className={s.button} onClick={deleteCallback}>×</button>\r\n\t\t</li>\r\n\r\n\t)\r\n}\r\n\r\nexport default Affair\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? `${s.button} ${s.red}` : s.button} ${className ? className : \"\"}  `\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\nimport s from \"./Affairs.module.css\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: Array<AffairType>\r\n    setFilter: (affair: FilterType) => void\r\n    deleteAffairCallback: (id: number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {props.setFilter(\"all\")} // need to fix\r\n    const setHigh = () => {props.setFilter(\"high\")}\r\n    const setMiddle = () => {props.setFilter(\"middle\")}\r\n    const setLow = () => {props.setFilter(\"low\")}\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n\r\n\r\n            <ul className={s.list}>\r\n                <li className={s.item}><p>Название</p><p>Приоритет</p></li>\r\n                {mappedAffairs}\r\n            </ul>\r\n\r\n            <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\r\n                <SuperButton className={s.filterButton} onClick={setAll}>All</SuperButton>\r\n                <SuperButton className={`${s.filterButton} ${s.red}`} onClick={setHigh}>High</SuperButton>\r\n                <SuperButton className={`${s.filterButton} ${s.yellow}`} onClick={setMiddle}>Middle</SuperButton>\r\n                <SuperButton className={`${s.filterButton} ${s.green}`} onClick={setLow}>Low</SuperButton>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\nimport s from './Affairs.module.css'\r\n\r\n// types\r\nexport type AffairPriorityType = \"high\" | \"middle\" | \"low\" // need to fix any\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: AffairPriorityType\r\n} // need to fix any\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\r\n    if (filter === 'all') return affairs\r\n    else {\r\n        return affairs.filter((item: AffairType) => item.priority === filter);\r\n    } // need to fix\r\n}\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\r\n    return affairs.filter((a:AffairType) => a._id !== _id) // need to fix\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\r\n\r\n    return (\r\n        <div >\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: boolean\r\n    errorText?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        errorText,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.superInput} ${error ? s.errorInput : ''} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{errorText ? errorText : \"required\"}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ChangeEvent, MouseEvent, KeyboardEvent} from 'react'\r\nimport s from './Greeting.module.css'\r\nimport {UserType} from \"./HW3\";\r\nimport SuperInputText from \"../h4/common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\n\r\nexport type AddEventType = MouseEvent<HTMLButtonElement> | KeyboardEvent<HTMLInputElement>\r\n\r\ntype GreetingPropsType = {\r\n\tname: string // need to fix any\r\n\tsetNameCallback: (value: string) => void // need to fix any\r\n\taddUser: () => void// need to fix any\r\n\terror: boolean // need to fix any\r\n\terrorText: string\r\n\ttotalUsers: number // need to fix any\r\n\tusers: Array<UserType>\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n\t{name, setNameCallback, addUser, error, totalUsers, users, errorText} // деструктуризация пропсов\r\n) => {\r\n\r\n\r\n\treturn (\r\n\t\t<div className={s.wrapper}>\r\n\t\t\t<div style={{display: \"flex\", alignItems: \"center\", position: \"relative\"}}>\r\n\t\t\t\t\t<SuperInputText value={name}\r\n\t\t\t\t\t\t\t\t\tonChangeText={setNameCallback} onEnter={addUser}\r\n\t\t\t\t\t\t\t\t\terror={error}\r\n\t\t\t\t\t\t\t\t\terrorText={errorText}\r\n\t\t\t\t\t\t\t\t\tclassName={s.input}\r\n\t\t\t\t\t/>\r\n\t\t\t\t<SuperButton disabled={error} onClick={addUser} className={s.buttonBorder}>Add</SuperButton>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className={s.usersList}>\r\n\t\t\t\t<h2 className={s.usersTitle}>Список пользователей: {totalUsers}</h2>\r\n\t\t\t\t{users.map((u: UserType, index: number) => (\r\n\t\t\t\t\t<div className={s.usersItem} key={u._id}>\r\n\t\t\t\t\t\t<span>{`№ ${index + 1}`}</span>\r\n\t\t\t\t\t\t<span>{u.name}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Greeting\r\n","import React, {ChangeEvent, KeyboardEvent, useState} from 'react'\r\nimport Greeting, {AddEventType} from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n\tusers: Array<UserType> // need to fix any\r\n\taddUserCallback: (name: string) => void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n\tconst [name, setName] = useState<string>('') // need to fix any\r\n\tconst [error, setError] = useState<boolean>(false) // need to fix any\r\n\r\n\tconst setNameCallback = (value: string) => { // need to fix any\r\n\t\tif (value && value[0] !== \" \") {\r\n\t\t\tsetError(false)\r\n\t\t\tsetName(value)\r\n\t\t} else {\r\n\t\t\tsetError(true)\r\n\t\t\tsetName(\"\")\r\n\t\t}\r\n\t}\r\n\tconst addUser = () => {\r\n\t\tif(name){\r\n\t\t\talert(`Hello ${name.trim()} !`)\r\n\t\t\taddUserCallback(name.trim());\r\n\t\t\tsetName(\"\")\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\tconst totalUsers = users.length // need to fix\r\n\r\n\treturn (\r\n\t\t<Greeting\r\n\t\t\tname={name}\r\n\t\t\tsetNameCallback={setNameCallback}\r\n\t\t\taddUser={addUser}\r\n\t\t\terror={error}\r\n\t\t\terrorText=\"Поле не может быть пустым\"\r\n\t\t\ttotalUsers={totalUsers}\r\n\t\t\tusers={users}\r\n\t\t/>\r\n\t)\r\n}\r\n\r\nexport default GreetingContainer\r\n\r\nfunction MouseEventHandler<T>() {\r\n\tthrow new Error('Function not implemented.');\r\n}\r\n\r\n","import React, {useState} from 'react'\r\nimport {v1} from 'uuid'\r\nimport GreetingContainer from './GreetingContainer'\r\n\r\n// types\r\nexport type UserType = {\r\n\t_id: string // need to fix any\r\n\tname: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n\tconst [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\r\n\r\n\tconst addUserCallback = (name: string) => { // need to fix any\r\n\t\t\tsetUsers([...users, {_id: v1(), name: name}]) // need to fix\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<hr/>\r\n\t\t\thomeworks 3\r\n\r\n\t\t\t{/*should work (должно работать)*/}\r\n\t\t\t<GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n\t\t\t<hr/>\r\n\t\t\t{/*для личного творчества, могу проверить*/}\r\n\t\t\t{/*<AlternativeGreeting/>*/}\r\n\t\t\t<hr/>\r\n\t\t</div>)\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e);\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label className={s.container}>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            <span className={s.checkmark}></span>\r\n            {children && <span >{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    errorText={error}\r\n                    // spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\nimport HW4 from '../../../p2-homeworks/h4/HW4';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            {/*<HW5/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}